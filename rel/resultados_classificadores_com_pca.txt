❯ python test_classifiers_cifar10.py -d ../../cifar_10_batches -m ../codigo/modelos/simple_cnn_10_e200.pth --pca_components 0.95
/home/alberto-ramos/Faculdade/IAAPLI/Trabalho/Trabalho_IAAPLI/codigo/test_classifiers_cifar10.py:62: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state_dict = torch.load(model_path, map_location=device)
Extraindo deep features do treino...
Extraindo deep features da validação...
Extraindo deep features do teste...
Aplicando PCA para 0.95 componentes...
Número de componentes PCA usados: 47
Treinando Logistic Regression...
Logistic Regression Accuracy: 0.3523, Tempo de Treinamento: 0.76 segundos
Treinando Random Forest...
Random Forest Accuracy: 0.3976, Tempo de Treinamento: 24.09 segundos
Treinando KNN...
KNN Accuracy: 0.3516, Tempo de Treinamento: 0.00 segundos
Treinando MLP...
MLP Accuracy: 0.4461, Tempo de Treinamento: 40.64 segundos
Treinando SVM...
SVM Accuracy: 0.4731, Tempo de Treinamento: 62.47 segundos
Gráfico salvo em: /home/alberto-ramos/Faculdade/IAAPLI/Trabalho/Trabalho_IAAPLI/codigo/graficos/cifar10_classifiers_comparison_pca47.png


❯ python test_classifiers_cifar100.py -d ../../cifar_100_python -m ../codigo/modelos/simple_cnn_100_e200.pth --pca_components 0.95
/home/alberto-ramos/Faculdade/IAAPLI/Trabalho/Trabalho_IAAPLI/codigo/test_classifiers_cifar100.py:62: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state_dict = torch.load(model_path, map_location=device)
Extraindo deep features do treino...
Extraindo deep features da validação...
Extraindo deep features do teste...
Aplicando PCA para 0.95 componentes...
Número de componentes PCA usados: 37
Treinando Logistic Regression...
Logistic Regression Accuracy: 0.1159, Tempo de Treinamento: 1.74 segundos
Treinando Random Forest...
Random Forest Accuracy: 0.1552, Tempo de Treinamento: 59.74 segundos
Treinando KNN...
KNN Accuracy: 0.1261, Tempo de Treinamento: 0.00 segundos
Treinando MLP...
MLP Accuracy: 0.1824, Tempo de Treinamento: 84.60 segundos
Treinando SVM...
SVM Accuracy: 0.1851, Tempo de Treinamento: 41.79 segundos
Gráfico salvo em: /home/alberto-ramos/Faculdade/IAAPLI/Trabalho/Trabalho_IAAPLI/codigo/graficos/cifar100_classifiers_comparison_pca37.png

